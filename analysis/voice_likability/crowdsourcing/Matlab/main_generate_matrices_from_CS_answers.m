
% Generate matrices from crowdee output
% Preference Matrix -> BTL ratio-scale analysis
% Dissimilarity Matrix -> MDS analysis

clear

%% Paths
path_matlab='D:\Users\fernandez.laura\Documents\Work\WP1_Data_collection\17\Matlab';
path_11='D:\Users\fernandez.laura\Documents\Work\WP1_Data_collection\11\matlab';

%% Variables
nvoices = 15;
npairs = nchoosek(nvoices,2); % 105;

%% Get Crowdee results - generated by running answers2matrix.m
load([path_matlab,'\pair_val__Day2510_Hour1105']); % This is the final pair_val with the 1365 accepted answers
%load([path_matlab,'\pair_val__Day0202_Hour1611']); % This is the final pair_val with ALL 1682 accepted and rejected answers


%% Create Preference Matrix

% init matrices
preferencematrix=zeros(nvoices);
dissimilaritymatrix=zeros(nvoices);


% From letters to int 1--16 and fill in the matrices
% for i=1:length(pairwavname)
for i=2:length(pairwavname)  % for ALL answers, the first pair_val starts from i=2
    name=cell2mat(pairwavname{i});
    numA=name(10);
    numB=name(12);
    
    
    spkNumA=uint8(numA)-97+1;
    spkNumB=uint8(numB)-97+1;
    
    % Preference matrix
    if slider_val(i)>=100
        preferredSpkNum=spkNumB;
    else
        preferredSpkNum=spkNumA;
    end
    
    index=find([spkNumA, spkNumB]==preferredSpkNum);
    
    % Row stimuli are chosen over column stimuli
    if index==1
        preferencematrix(spkNumA,spkNumB)=preferencematrix(spkNumA,spkNumB)+1;
    elseif index==2
        preferencematrix(spkNumB,spkNumA)=preferencematrix(spkNumB,spkNumA)+1;
    end
    
    % Dissimilarity matrix 
    % cumulative, and perform the average when all responses have been
    % submitted. at the end of this loop
    dissimilaritymatrix(spkNumA,spkNumB)=dissimilaritymatrix(spkNumA,spkNumB)+slider_val(i);
    dissimilaritymatrix(spkNumB,spkNumA)=dissimilaritymatrix(spkNumB,spkNumA)+slider_val(i);
 
end


 


%% get male speakers indexes
load([path_11,'\data_NB_WB.mat']) % speakers are in rows and listener are in columns
nspeakers=size(data_WB,1)/2;
load([path_11,'\participants.mat'])
ispresent = cellfun(@(s) ~isempty(strfind('m', s)), gender);
male_i=find(ispresent==1);
name_males_i=name(male_i);



%% Save matrices - Matlab and R

% ch=strfind(filename,'_');
% listenerNum=filename(ch(3)+1:ch(4)-1);
% listenerName=filename(ch(4)+1:end-4);

% Matlab
save([path_matlab,'/','preferencematrix_ALL.mat'],'preferencematrix');

save([path_matlab,'/','dissimilaritymatrix_ALL.mat'],'dissimilaritymatrix');

% R
% fileID = fopen([path_matlab,'/','preferencematrix_ALL.csv'],'w');
fileID = fopen([path_matlab,'/','preferencematrix_onlyaccepted.csv'],'w');
colnames='';
strcode='';
for i=1:14
    colnames=[colnames,name_males_i{i},','];
    strcode=[strcode,'%u, '];
end
colnames=[colnames,name_males_i{15}];
strcode=[strcode,'%u\n'];
fprintf(fileID,'%s\n',colnames);
fprintf(fileID,strcode, preferencematrix');
fclose(fileID);


% fileID = fopen([path_matlab,'/','dissimilaritymatrix_ALL.csv'],'w');
fileID = fopen([path_matlab,'/','dissimilaritymatrix_onlyaccepted.csv'],'w');
colnames='';
strcode='';
for i=1:14
    colnames=[colnames,name_males_i{i},','];
    strcode=[strcode,'%u, '];
end
colnames=[colnames,name_males_i{15}];
strcode=[strcode,'%u\n'];
fprintf(fileID,'%s\n',colnames);
fprintf(fileID,strcode, dissimilaritymatrix');
fclose(fileID);

