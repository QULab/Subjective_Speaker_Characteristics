path_generated_data <- paste0(setwd_thisdir,"../data/generated_data")
factorscores_m <- data.frame("sample_heard"=data_m$sample_heard, "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(RCurl) # to read raw data from repo
library(GPArotation)
library(psych) # for alpha analysis
setwd(getwd())
path_generated_data <- paste0(setwd_thisdir,"../data/generated_data")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(RCurl) # to read raw data from repo
library(GPArotation)
library(psych) # for alpha analysis
setwd(getwd())
path_github <- "https://raw.githubusercontent.com/laufergall/Subjective_Speaker_Characteristics/master/data/subjective_ratings"
data_raw <- read.csv(text=getURL(paste0(path_github,"/SC_ratings.csv")), header=TRUE, sep=",")
data_split_g <- split(data_raw, data_raw$speaker_gender)
data_m <- data_split_g$male
data_f <- data_split_g$female
# always use z-scores
data_m <- data_m[order(data_m$listener_pseudonym),]
data_m<- cbind(data_m[,c(1, 5)], data.frame(do.call("rbind", as.list(by(data_m[,10:ncol(data_m)], data_m$listener_pseudonym, scale)))))
data_m <- data_m[order(data_m$listener_pseudonym),]
# find the no of factors
fa.parallel(data_m[,3:ncol(data_m)])
fa_m <- fa(data_m[,3:ncol(data_m)], nfactors=7 , rotate="oblimin", fm="minres") # this is default; no pricipal axis analysis
print(fa_m, cut=.2, digits=2, sort=T)
## Second round: Run factor analysis again, removing items:
itemsremove <- c("emotional", "gesellig", "charakterlos", "intelligent", "aktiv", "bescheiden", "dominant", "unaufdringlich", "maennlich", "entspannt", "gleichgueltig", "gelangweilt", "unaffektiert", "aufgesetzt", "unsachlich", "inkompetent")
intemsremoveindexes <- match( itemsremove, colnames(data_m))
data_m_02 <- data_m[ ,-intemsremoveindexes ]
names(data_m_02)
fa.parallel(data_m_02[,3:ncol(data_m_02)])
# Parallel analysis suggests that the number of factors =  5  and the number of components =  3
fa_m_02 <- fa(data_m_02[,3:ncol(data_m_02)], nfactors=5 , rotate="oblimin", fm="minres") # this is default; no pricipal axis analysis
print(fa_m_02, cut=.2, digits=2, sort=T)
# Dimension 1 -  MR1
alpha(as.data.frame(cbind(
data_m_02$herzlich, data_m_02$mitfuehlend, data_m_02$distanziert, data_m_02$freundlich, data_m_02$verstaendnislos, data_m_02$unsympatisch, data_m_02$nicht.genervt)
),check.keys=TRUE)
# raw_alpha = 0.88. no item removed
# Dimension 2 -  MR4
alpha(as.data.frame(cbind(
data_m_02$attraktiv, data_m_02$haesslich, data_m_02$interessant, data_m_02$angenehm)
),check.keys=TRUE)
# raw_alpha = 0.84. no item removed
# Dimension 3 -  MR2
alpha(as.data.frame(cbind(
data_m_02$sicher, data_m_02$unentschieden)
),check.keys=TRUE)
# raw_alpha = 0.78. no item removed
# Dimension 4 -  MR5
alpha(as.data.frame(cbind(
data_m_02$gehorsam, data_m_02$zynisch)
),check.keys=TRUE)
# raw_alpha = 0.78. no item removed
# Dimension 5 -  MR3
alpha(as.data.frame(cbind(
data_m_02$alt, data_m_02$kindlich, data_m_02$ruhig)
),check.keys=TRUE)
# raw_alpha = 0.63
alpha(as.data.frame(cbind(
data_m_02$alt, data_m_02$kindlich)
),check.keys=TRUE)
# raw_alpha = 0.76
loa_m <- fa_m_02$loadings
loa_m_df <- as.data.frame(loa_m[,])
fs_m_dim1 <- loa_m_df["herzlich",1]*data_m$herzlich +
loa_m_df["mitfuehlend",1]*data_m$mitfuehlend +
loa_m_df["distanziert",1]*data_m$distanziert +
loa_m_df["freundlich",1]*data_m$freundlich +
loa_m_df["verstaendnislos",1]*data_m$verstaendnislos +
loa_m_df["unsympathisch",1]*data_m$unsympathisch +
loa_m_df["nicht_genervt",1]*data_m$nicht_genervt
fs_m_dim2 <- loa_m_df["attraktiv",2]*data_m$attraktiv +
loa_m_df["haesslich",2]*data_m$haesslich +
loa_m_df["angenehm",2]*data_m$angenehm +
loa_m_df["interessant",2]*data_m$interessant
fs_m_dim3 <- loa_m_df["sicher",3]*data_m$sicher +
loa_m_df["unentschieden",3]*data_m$unentschieden
fs_m_dim4 <- loa_m_df["gehorsam",4]*data_m$gehorsam +
loa_m_df["zynisch",4]*data_m$zynisch
fs_m_dim5 <- loa_m_df["alt",5]*data_m$alt +
loa_m_df["kindlich",5]*data_m$kindlich
factorscores_m <- data.frame("sample_heard"=data_m$sample_heard, "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
# average over raters
factorscores_m_averaged <- aggregate(factorscores_m[,2:ncol(factorscores_m)], by=list(factorscores_m$sample_heard), mean, na.rm=T)
names(factorscores_m_averaged)[1] <- "sample_heard"
write.csv(factorscores_m_averaged, "..data/generated_data/factorscores_malespk.csv", row.names = F)
factorscores_m <- data.frame("sample_heard"=data_m$sample_heard, "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
# average over raters
factorscores_m_averaged <- aggregate(factorscores_m[,2:ncol(factorscores_m)], by=list(factorscores_m$sample_heard), mean, na.rm=T)
names(factorscores_m_averaged)[1] <- "sample_heard"
write.csv(factorscores_m_averaged, "../data/generated_data/factorscores_malespk.csv", row.names = F)
getwd()
this.dir = dirname(parent.frame(2)$ofile)
this.dir = dirname(parent.frame(3)$ofile)
parent.frame(3)
parent.frame(3)$ofile
parent.frame(2)$ofile
dirname(parent.frame(2)$ofile)
getwd()
setwd("D:/Work/git_ML/Subjective_Speaker_Characteristics/speaker_characteristics/factor_analysis/")
path_github <- "https://raw.githubusercontent.com/laufergall/Subjective_Speaker_Characteristics/master/data/subjective_ratings"
data_raw <- read.csv(text=getURL(paste0(path_github,"/SC_ratings.csv")), header=TRUE, sep=",")
factorscores_m <- data.frame("sample_heard"=data_m$sample_heard, "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
# average over raters
factorscores_m_averaged <- aggregate(factorscores_m[,2:ncol(factorscores_m)], by=list(factorscores_m$sample_heard), mean, na.rm=T)
names(factorscores_m_averaged)[1] <- "sample_heard"
write.csv(factorscores_m_averaged, "../data/generated_data/factorscores_malespk.csv", row.names = F)
getwd
getwd()
setwd("D:/Work/git_ML/Subjective_Speaker_Characteristics/speaker_characteristics/factor_analysis/")
path_github <- "https://raw.githubusercontent.com/laufergall/Subjective_Speaker_Characteristics/master/data/subjective_ratings"
data_raw <- read.csv(text=getURL(paste0(path_github,"/SC_ratings.csv")), header=TRUE, sep=",")
getwd()
setwd("D:/Work/git_ML/Subjective_Speaker_Characteristics/speaker_characteristics/factor_analysis/")
getwd()
knitr::opts_chunk$set(echo = TRUE)
opts_chunk$set(root.dir = './')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir = './')
getwd()
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir = './')
rm(list=ls())
library(RCurl) # to read raw data from repo
library(GPArotation)
library(psych) # for alpha analysis
setwd("D:/Work/git_ML/Subjective_Speaker_Characteristics/speaker_characteristics/factor_analysis/")
path_github <- "https://raw.githubusercontent.com/laufergall/Subjective_Speaker_Characteristics/master/data/subjective_ratings"
data_raw <- read.csv(text=getURL(paste0(path_github,"/SC_ratings.csv")), header=TRUE, sep=",")
data_split_g <- split(data_raw, data_raw$speaker_gender)
data_m <- data_split_g$male
data_f <- data_split_g$female
# always use z-scores
data_m <- data_m[order(data_m$listener_pseudonym),]
data_m<- cbind(data_m[,c(1, 5)], data.frame(do.call("rbind", as.list(by(data_m[,10:ncol(data_m)], data_m$listener_pseudonym, scale)))))
data_m <- data_m[order(data_m$listener_pseudonym),]
# find the no of factors
fa.parallel(data_m[,3:ncol(data_m)])
fa_m <- fa(data_m[,3:ncol(data_m)], nfactors=7 , rotate="oblimin", fm="minres") # this is default; no pricipal axis analysis
print(fa_m, cut=.2, digits=2, sort=T)
## Second round: Run factor analysis again, removing items:
itemsremove <- c("emotional", "gesellig", "charakterlos", "intelligent", "aktiv", "bescheiden", "dominant", "unaufdringlich", "maennlich", "entspannt", "gleichgueltig", "gelangweilt", "unaffektiert", "aufgesetzt", "unsachlich", "inkompetent")
intemsremoveindexes <- match( itemsremove, colnames(data_m))
data_m_02 <- data_m[ ,-intemsremoveindexes ]
names(data_m_02)
fa.parallel(data_m_02[,3:ncol(data_m_02)])
# Parallel analysis suggests that the number of factors =  5  and the number of components =  3
fa_m_02 <- fa(data_m_02[,3:ncol(data_m_02)], nfactors=5 , rotate="oblimin", fm="minres") # this is default; no pricipal axis analysis
print(fa_m_02, cut=.2, digits=2, sort=T)
# Dimension 1 -  MR1
alpha(as.data.frame(cbind(
data_m_02$herzlich, data_m_02$mitfuehlend, data_m_02$distanziert, data_m_02$freundlich, data_m_02$verstaendnislos, data_m_02$unsympatisch, data_m_02$nicht.genervt)
),check.keys=TRUE)
# raw_alpha = 0.88. no item removed
# Dimension 2 -  MR4
alpha(as.data.frame(cbind(
data_m_02$attraktiv, data_m_02$haesslich, data_m_02$interessant, data_m_02$angenehm)
),check.keys=TRUE)
# raw_alpha = 0.84. no item removed
# Dimension 3 -  MR2
alpha(as.data.frame(cbind(
data_m_02$sicher, data_m_02$unentschieden)
),check.keys=TRUE)
# raw_alpha = 0.78. no item removed
# Dimension 4 -  MR5
alpha(as.data.frame(cbind(
data_m_02$gehorsam, data_m_02$zynisch)
),check.keys=TRUE)
# raw_alpha = 0.78. no item removed
# Dimension 5 -  MR3
alpha(as.data.frame(cbind(
data_m_02$alt, data_m_02$kindlich, data_m_02$ruhig)
),check.keys=TRUE)
# raw_alpha = 0.63
alpha(as.data.frame(cbind(
data_m_02$alt, data_m_02$kindlich)
),check.keys=TRUE)
# raw_alpha = 0.76
loa_m <- fa_m_02$loadings
loa_m_df <- as.data.frame(loa_m[,])
fs_m_dim1 <- loa_m_df["herzlich",1]*data_m$herzlich +
loa_m_df["mitfuehlend",1]*data_m$mitfuehlend +
loa_m_df["distanziert",1]*data_m$distanziert +
loa_m_df["freundlich",1]*data_m$freundlich +
loa_m_df["verstaendnislos",1]*data_m$verstaendnislos +
loa_m_df["unsympathisch",1]*data_m$unsympathisch +
loa_m_df["nicht_genervt",1]*data_m$nicht_genervt
fs_m_dim2 <- loa_m_df["attraktiv",2]*data_m$attraktiv +
loa_m_df["haesslich",2]*data_m$haesslich +
loa_m_df["angenehm",2]*data_m$angenehm +
loa_m_df["interessant",2]*data_m$interessant
fs_m_dim3 <- loa_m_df["sicher",3]*data_m$sicher +
loa_m_df["unentschieden",3]*data_m$unentschieden
fs_m_dim4 <- loa_m_df["gehorsam",4]*data_m$gehorsam +
loa_m_df["zynisch",4]*data_m$zynisch
fs_m_dim5 <- loa_m_df["alt",5]*data_m$alt +
loa_m_df["kindlich",5]*data_m$kindlich
factorscores_m <- data.frame("sample_heard"=data_m$sample_heard, "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
# average over raters
factorscores_m_averaged <- aggregate(factorscores_m[,2:ncol(factorscores_m)], by=list(factorscores_m$sample_heard), mean, na.rm=T)
names(factorscores_m_averaged)[1] <- "sample_heard"
write.csv(factorscores_m_averaged, "../data/generated_data/factorscores_malespk.csv", row.names = F)
getwd()
factorscores_m <- data.frame("sample_heard"=data_m$sample_heard, "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
# average over raters
factorscores_m_averaged <- aggregate(factorscores_m[,2:ncol(factorscores_m)], by=list(factorscores_m$sample_heard), mean, na.rm=T)
names(factorscores_m_averaged)[1] <- "sample_heard"
write.csv(factorscores_m_averaged, "../../data/generated_data/factorscores_malespk.csv", row.names = F)
# save scores without averaging
factorscores_m_02 <- data.frame(data_m$listener_pseudonym, data_m$sample_heard,  "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
write.csv(factorscores_m_02, "../../data/generated_data/factorscores_malespk_notaveraged.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir = './')
rm(list=ls())
library(RCurl) # to read raw data from repo
library(GPArotation)
library(psych) # for alpha analysis
setwd("D:/Work/git_ML/Subjective_Speaker_Characteristics/speaker_characteristics/factor_analysis/")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir = './')
rm(list=ls())
library(RCurl) # to read raw data from repo
library(GPArotation)
library(psych) # for alpha analysis
setwd("D:/Users/fernandez.laura/Documents/Work/Projects_Github/Subjective_Speaker_Characteristics/speaker_characteristics/factor_analysis")
path_github <- "https://raw.githubusercontent.com/laufergall/Subjective_Speaker_Characteristics/master/data/subjective_ratings"
data_raw <- read.csv(text=getURL(paste0(path_github,"/SC_ratings.csv")), header=TRUE, sep=",")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir = './')
rm(list=ls())
library(RCurl) # to read raw data from repo
library(GPArotation)
library(psych) # for alpha analysis
setwd("D:/Users/fernandez.laura/Documents/Work/Projects_Github/Subjective_Speaker_Characteristics/speaker_characteristics/factor_analysis")
path_github <- "https://raw.githubusercontent.com/laufergall/Subjective_Speaker_Characteristics/master/data/subjective_ratings"
data_raw <- read.csv(text=getURL(paste0(path_github,"/SC_ratings.csv")), header=TRUE, sep=",")
data_split_g <- split(data_raw, data_raw$speaker_gender)
data_m <- data_split_g$male
data_f <- data_split_g$female
# always use z-scores
data_m <- data_m[order(data_m$listener_pseudonym),]
data_m<- cbind(data_m[,c(1, 5)], data.frame(do.call("rbind", as.list(by(data_m[,10:ncol(data_m)], data_m$listener_pseudonym, scale)))))
data_m <- data_m[order(data_m$listener_pseudonym),]
# find the no of factors
fa.parallel(data_m[,3:ncol(data_m)])
fa_m <- fa(data_m[,3:ncol(data_m)], nfactors=7 , rotate="oblimin", fm="minres") # this is default; no pricipal axis analysis
print(fa_m, cut=.2, digits=2, sort=T)
## Second round: Run factor analysis again, removing items:
itemsremove <- c("emotional", "gesellig", "charakterlos", "intelligent", "aktiv", "bescheiden", "dominant", "unaufdringlich", "maennlich", "entspannt", "gleichgueltig", "gelangweilt", "unaffektiert", "aufgesetzt", "unsachlich", "inkompetent")
intemsremoveindexes <- match( itemsremove, colnames(data_m))
data_m_02 <- data_m[ ,-intemsremoveindexes ]
names(data_m_02)
fa.parallel(data_m_02[,3:ncol(data_m_02)])
# Parallel analysis suggests that the number of factors =  5  and the number of components =  3
fa_m_02 <- fa(data_m_02[,3:ncol(data_m_02)], nfactors=5 , rotate="oblimin", fm="minres") # this is default; no pricipal axis analysis
print(fa_m_02, cut=.2, digits=2, sort=T)
# Dimension 1 -  MR1
alpha(as.data.frame(cbind(
data_m_02$herzlich, data_m_02$mitfuehlend, data_m_02$distanziert, data_m_02$freundlich, data_m_02$verstaendnislos, data_m_02$unsympatisch, data_m_02$nicht.genervt)
),check.keys=TRUE)
# raw_alpha = 0.88. no item removed
# Dimension 2 -  MR4
alpha(as.data.frame(cbind(
data_m_02$attraktiv, data_m_02$haesslich, data_m_02$interessant, data_m_02$angenehm)
),check.keys=TRUE)
# raw_alpha = 0.84. no item removed
# Dimension 3 -  MR2
alpha(as.data.frame(cbind(
data_m_02$sicher, data_m_02$unentschieden)
),check.keys=TRUE)
# raw_alpha = 0.78. no item removed
# Dimension 4 -  MR5
alpha(as.data.frame(cbind(
data_m_02$gehorsam, data_m_02$zynisch)
),check.keys=TRUE)
# raw_alpha = 0.78. no item removed
# Dimension 5 -  MR3
alpha(as.data.frame(cbind(
data_m_02$alt, data_m_02$kindlich, data_m_02$ruhig)
),check.keys=TRUE)
# raw_alpha = 0.63
alpha(as.data.frame(cbind(
data_m_02$alt, data_m_02$kindlich)
),check.keys=TRUE)
# raw_alpha = 0.76
loa_m <- fa_m_02$loadings
loa_m_df <- as.data.frame(loa_m[,])
fs_m_dim1 <- loa_m_df["herzlich",1]*data_m$herzlich +
loa_m_df["mitfuehlend",1]*data_m$mitfuehlend +
loa_m_df["distanziert",1]*data_m$distanziert +
loa_m_df["freundlich",1]*data_m$freundlich +
loa_m_df["verstaendnislos",1]*data_m$verstaendnislos +
loa_m_df["unsympathisch",1]*data_m$unsympathisch +
loa_m_df["nicht_genervt",1]*data_m$nicht_genervt
fs_m_dim2 <- loa_m_df["attraktiv",2]*data_m$attraktiv +
loa_m_df["haesslich",2]*data_m$haesslich +
loa_m_df["angenehm",2]*data_m$angenehm +
loa_m_df["interessant",2]*data_m$interessant
fs_m_dim3 <- loa_m_df["sicher",3]*data_m$sicher +
loa_m_df["unentschieden",3]*data_m$unentschieden
fs_m_dim4 <- loa_m_df["gehorsam",4]*data_m$gehorsam +
loa_m_df["zynisch",4]*data_m$zynisch
fs_m_dim5 <- loa_m_df["alt",5]*data_m$alt +
loa_m_df["kindlich",5]*data_m$kindlich
factorscores_m <- data.frame("sample_heard"=data_m$sample_heard, "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
# average over raters
factorscores_m_averaged <- aggregate(factorscores_m[,2:ncol(factorscores_m)], by=list(factorscores_m$sample_heard), mean, na.rm=T)
names(factorscores_m_averaged)[1] <- "sample_heard"
write.csv(factorscores_m_averaged, "../../data/generated_data/factorscores_malespk.csv", row.names = F)
# save scores without averaging
factorscores_m_02 <- data.frame(data_m$listener_pseudonym, data_m$sample_heard,  "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
write.csv(factorscores_m_02, "../../data/generated_data/factorscores_malespk_notaveraged.csv", row.names = F)
# always use z-scores
data_f <- data_f[order(data_f$listener_pseudonym),]
data_f <- cbind(data_f[,c(1, 5)], data.frame(do.call("rbind", as.list(by(data_f[,10:ncol(data_f)], data_f$listener_pseudonym, scale)))))
data_f <- data_f[order(data_f$listener_pseudonym),]
# find the no of factors
names(data_f)[3:ncol(data_f)]
fa.parallel(data_f[,3:ncol(data_f)])
# Parallel analysis suggests that the number of factors =  8  and the number of components =  5
fa_f <- fa(data_f[,3:ncol(data_f)], nfactors=8 , rotate="oblimin", fm="minres") # this is default; no pricipal axis analysis
print(fa_f, cut=.2, digits=2, sort=T)
## Second round: Run factor analysis again, removing items:
itemsremove <- c("gleichgueltig","charakterlos","inkompetent","maennlich","aktiv","entspannt","dominant","unaufdringlich","ruhig","gelangweilt","aufgesetzt","emotional","unsachlich","gesellig","interessant")
intemsremoveindexes <- match( itemsremove, colnames(data_f))
data_f_02 <- data_f[ ,-intemsremoveindexes ]
names(data_f_02)[3:ncol(data_f_02)]
fa.parallel(data_f_02[,3:ncol(data_f_02)])
# Parallel analysis suggests that the number of factors =  6  and the number of components =  4
fa_f_02 <- fa(data_f_02[,3:ncol(data_f_02)], nfactors=5 , rotate="oblimin", fm="minres") # this is default; no pricipal axis analysis
print(fa_f_02, cut=.2, digits=2, sort=T)
fa.diagram(fa_f_02, cut=.40, digits=2)   # fa.graph for plotting
# Dimension 1 -  MR1
alpha(as.data.frame(cbind(
data_f_02$herzlich, data_f_02$mitfuehlend, data_f_02$distanziert, data_f_02$freundlich, data_f_02$verstaendnislos, data_f_02$nicht.genervt, data_f_02$unsympatisch)
),check.keys=TRUE)
# raw_alpha = 0.89
# Dimension 2 -  MR4
alpha(as.data.frame(cbind(
data_f_02$attraktiv, data_f_02$haesslich, data_f_02$intelligent, data_f_02$angenehm)
),check.keys=TRUE)
# raw_alpha = 0.86 if intelligent removed (before raw_alpha = 0.84)
alpha(as.data.frame(cbind(
data_f_02$attraktiv, data_f_02$haesslich, data_f_02$angenehm)
),check.keys=TRUE)
# raw_alpha = 0.86
# Dimension 3 -  MR5
alpha(as.data.frame(cbind(
data_f_02$gehorsam, data_f_02$zynisch, data_f_02$bescheiden, data_f_02$unaffektiert)
),check.keys=TRUE)
# raw_alpha = 0.76 if unaffektiert removed (before raw_alpha = 0.67)
alpha(as.data.frame(cbind(
data_f_02$gehorsam, data_f_02$zynisch, data_f_02$bescheiden)
),check.keys=TRUE)
# raw_alpha = 0.78 if bescheiden removed (before raw_alpha = 0.76)
alpha(as.data.frame(cbind(
data_f_02$gehorsam, data_f_02$zynisch)
),check.keys=TRUE)
# raw_alpha = 0.78
# Dimension 4 -  MR2
alpha(as.data.frame(cbind(
data_f_02$sicher, data_f_02$unentschieden)
),check.keys=TRUE)
# raw_alpha = 0.80. no item removed
# Dimension 5 -  MR3
alpha(as.data.frame(cbind(
data_f_02$alt, data_f_02$kindlich)
),check.keys=TRUE)
# raw_alpha = 0.71. no item removed
## Compute new factor scores as a weighted average of the z-scores
loa_f <- fa_f_02$loadings
loa_f_df <- as.data.frame(loa_f[,])
fs_f_dim1 <- loa_f_df["herzlich",1]*data_f$herzlich +
loa_f_df["mitfuehlend",1]*data_f$mitfuehlend +
loa_f_df["distanziert",1]*data_f$distanziert +
loa_f_df["freundlich",1]*data_f$freundlich +
loa_f_df["verstaendnislos",1]*data_f$verstaendnislos +
loa_f_df["nicht_genervt",1]*data_f$nicht_genervt +
loa_f_df["unsympathisch",1]*data_f$unsympathisch
fs_f_dim2 <- loa_f_df["attraktiv",2]*data_f$attraktiv +
loa_f_df["haesslich",2]*data_f$haesslich +
loa_f_df["angenehm",2]*data_f$angenehm
fs_f_dim3 <- loa_f_df["gehorsam",3]*data_f$gehorsam +
loa_f_df["zynisch",3]*data_f$zynisch
fs_f_dim4 <- loa_f_df["sicher",4]*data_f$sicher +
loa_f_df["unentschieden",4]*data_f$unentschieden
fs_f_dim5 <- loa_f_df["alt",5]*data_f$alt +
loa_f_df["kindlich",5]*data_f$kindlich
factorscores_f <- data.frame("sample_heard"=data_f$sample_heard, "dim1"=fs_f_dim1, "dim2"=fs_f_dim2, "dim3"=fs_f_dim3, "dim4"=fs_f_dim4, "dim5"=fs_f_dim5)
factorscores_f_averaged <- aggregate(factorscores_f[,2:ncol(factorscores_f)], by=list(factorscores_f$sample_heard), mean, na.rm=T)
names(factorscores_f_averaged)[1] <- "sample_heard"
write.csv(factorscores_f_averaged, "../../data/generated_data/factorscores_femalespk.csv", row.names = F)
# save scores without averaging
factorscores_f_02 <- data.frame(data_m$listener_pseudonym, data_m$sample_heard,  "dim1"=fs_m_dim1, "dim2"=fs_m_dim2, "dim3"=fs_m_dim3, "dim4"=fs_m_dim4, "dim5"=fs_m_dim5)
write.csv(factorscores_f_02, "../../data/generated_data/factorscores_femalespk_notaveraged.csv", row.names = F)
loa_f_df
loa_f_df[,loa_f_df>0.5]
loa_f_df[loa_f_df>0.5]
loa_f_df[abs(loa_f_df)>0.4]
subset(loa_f_df, abs(loa_f_df)>0.4)
loa_f_df[abs(loa_f_df)>0.4]
subset(loa_f_df, abs(loa_f_df)>0.4)
loa_f_df_retained[abs(loa_f_df_retained)<0.4] < 0
loa_f_df_retained <- loa_f_df
loa_f_df_retained[abs(loa_f_df_retained)<0.4] < 0
loa_f_df_retained[abs(loa_f_df_retained)<0.4] <- 0
loa_f_df_retained
loa_f_df_retained) <- c("benevolence",  "attractiveness", "confidence",  "compliance", "maturity")
names(loa_f_df_retained) <- c("benevolence",  "attractiveness", "confidence",  "compliance", "maturity")
kable(loa_f_df_retained)
library(kable) # table when knitr
library(knitr) # for kable
kable(loa_f_df_retained)
kable(loa_f_df_retained, digits = 2)
mean(abs(loa_f_df_retained))
mean(loa_f_df_retained[abs(loa_f_df_retained)<0.4])
# set to NA low loadings, to hide from kable
loa_f_df_retained <- loa_f_df
mean(loa_f_df_retained[abs(loa_f_df_retained)<0.4])
mean(loa_f_df_retained[abs(loa_f_df_retained)<0.02])
mean(loa_f_df_retained[abs(loa_f_df_retained)<0.5])
mean(loa_f_df_retained[abs(loa_f_df_retained)<0.5])
# set to NA low loadings, to hide from kable
loa_f_df_retained <- loa_f_df
mean(loa_f_df_retained[abs(loa_f_df_retained)<0.5])
mean(loa_f_df_retained[abs(loa_f_df_retained)<0.4])
loa_f_df[abs(loa_f_df)>0.4]
loa_f_df
loa_f_df_retained[abs(loa_f_df_retained)<0.3] <- NA
names(loa_f_df_retained) <- c("benevolence",  "attractiveness", "compliance", "confidence",  "maturity")
options(knitr.kable.NA = '')
kable(loa_f_df_retained, digits = 2)
# set to NA the cross-loadings, to hide from kable
loa_f_df_retained <- loa_f_df
loa_f_df_retained[abs(loa_f_df_retained)<0.4]
fa_f_02
# adding item translations
sc_items <- read.csv(text=getURL(paste0(path_github,"/SC_Questionnaire.csv")), header=TRUE, sep=",")
sc_items
?merghe
?merge
names(loa_f_df_retained)
loa_f_df_retained$item <- rownames(loa_f_df_retained)
loa_f_df_retained
loa_f_df_retained_m <- merge(loa_f_df_retained, sc_items, by.x = 'item', by.y = 'right_German')
loa_f_df_retained_m
kable(loa_f_df_retained_m[:,c(10,2:6)], digits = 2)
kable(loa_f_df_retained_m[:,c(10,2:6)], digits = 2)
loa_f_df_retained_m
loa_f_df_retained_m[:,c(10,2:6)]
kable(loa_f_df_retained_m[,c(10,2:6)], digits = 2)
names(loa_f_df)
loa_f_df$item <- rownames(loa_f_df)
sc_items <- read.csv(text=getURL(paste0(path_github,"/SC_Questionnaire.csv")), header=TRUE, sep=",")
loa_f_df_retained <- merge(loa_f_df, sc_items, by.x = 'item', by.y = 'right_German')
loa_f_df_retained
loa_f_df_retained <- loa_f_df_retained[,c(10,2:6)]
loa_f_df_retained
# keep only English item translations
loa_f_df$item <- rownames(loa_f_df)
sc_items <- read.csv(text=getURL(paste0(path_github,"/SC_Questionnaire.csv")), header=TRUE, sep=",")
loa_f_df_retained <- merge(loa_f_df, sc_items, by.x = 'item', by.y = 'right_German')
loa_f_df_retained <- loa_f_df_retained[,c(10,2:6)]
# set to NA the cross-loadings, to hide from kable
mean(loa_f_df_retained[abs(loa_f_df_retained)<0.4]) # avg of cros-loadings to be removed
# set to NA the cross-loadings, to hide from kable
mean(loa_f_df_retained[abs(loa_f_df_retained[,2:])<0.4]) # avg of cros-loadings to be removed
names(loa_f_df_retained[,2:5])
names(loa_f_df_retained[,2:6])
# keep only English item translations
loa_f_df$item <- rownames(loa_f_df)
sc_items <- read.csv(text=getURL(paste0(path_github,"/SC_Questionnaire.csv")), header=TRUE, sep=",")
loa_f_df_retained <- merge(loa_f_df, sc_items, by.x = 'item', by.y = 'right_German')
loa_f_df_retained <- loa_f_df_retained[,c(10,2:6)]
# set to NA the cross-loadings, to hide from kable
mean(loa_f_df_retained[abs(loa_f_df_retained[,2:6])<0.4]) # avg of cros-loadings to be removed
loa_f_df_retained[abs(loa_f_df_retained[,2:6])<0.4] <- NA
loa_f_df_retained[,2:6][abs(loa_f_df_retained[,2:6])<0.4] <- NA
# keep only English item translations
loa_f_df$item <- rownames(loa_f_df)
sc_items <- read.csv(text=getURL(paste0(path_github,"/SC_Questionnaire.csv")), header=TRUE, sep=",")
loa_f_df_retained <- merge(loa_f_df, sc_items, by.x = 'item', by.y = 'right_German')
loa_f_df_retained <- loa_f_df_retained[,c(10,2:6)]
# set to NA the cross-loadings, to hide from kable
mean(loa_f_df_retained[abs(loa_f_df_retained[,2:6])<0.4]) # avg of cros-loadings to be removed
loa_f_df_retained[,2:6][abs(loa_f_df_retained[,2:6])<0.4] <- NA
# dimension names
names(loa_f_df_retained) <- c("item_English","benevolence",  "attractiveness", "compliance", "confidence",  "maturity")
# show table with kable
options(knitr.kable.NA = '')
kable(loa_f_df_retained, digits = 2)
# keep only English item translations
sc_items <- read.csv(text=getURL(paste0(path_github,"/SC_Questionnaire.csv")), header=TRUE, sep=",")
loa_m_df$item <- rownames(loa_m_df)
loa_m_df_retained <- merge(loa_m_df, sc_items, by.x = 'item', by.y = 'right_German')
loa_m_df_retained <- loa_m_df_retained[,c(10,2:6)]
# set to NA the cross-loadings, to hide from kable
mean(loa_m_df_retained[abs(loa_m_df_retained[,2:6])<0.4]) # avg of cros-loadings to be removed
loa_m_df_retained[,2:6][abs(loa_m_df_retained[,2:6])<0.4] <- NA
# dimension names
names(loa_m_df_retained) <- c("item_English","benevolence",  "attractiveness", "compliance", "confidence",  "maturity")
# show loadings table with kable
options(knitr.kable.NA = '')
kable(loa_m_df_retained, digits = 2)
mean(loa_f_df_retained[abs(loa_f_df_retained[,2:6])<0.4])
mean(loa_f_df_retained[:,2:6][abs(loa_f_df_retained[,2:6])<0.4])
mean(loa_f_df_retained[,2:6][abs(loa_f_df_retained[,2:6])<0.4])
